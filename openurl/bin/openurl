#!/usr/bin/env python3.6

from pathlib import Path
import re
import shlex
import subprocess
import sys

import requests

urls = sys.argv[1:]


def notify(summary, body=""):
    args = ["notify-send", "--app-name=openurl", summary]
    if body:
        args.append(body)
    subprocess.Popen(args)


conf = []
with Path("~/.config/openurl.conf").expanduser().open() as f:
    for line in f:
        stripped = line.strip()
        if not stripped or stripped.startswith("#"):
            continue  # Discard empty and commented lines
        conf.append(stripped.split(maxsplit=1))

for url in urls:
    req = requests.head(url)
    content_type = req.headers.get('content-type')
    mime_type = content_type.split(";", maxsplit=1)[0] if content_type else None

    if req.status_code >= 400:
        print(f"HTTP {req.status_code}", file=sys.stderr)
        notify(f"HTTP {req.status_code}",
               f"Server returned HTTP status code {req.status_code} for:\n{url!r}")
        continue

    for reg, cmd in conf:
        if reg.startswith("mime:"):
            reg = reg[5:]
            if not mime_type or not re.search(reg, mime_type):
                continue
            print(f"MIME type {mime_type!r} matched by `{reg!s}`", file=sys.stderr)
        elif not re.search(reg, url):
            continue
        else:
            print(f"URL matched by `{reg!s}`", file=sys.stderr)

        args = shlex.split(cmd.format(url=url))
        print(f"Opening {url!r} with `{cmd}`", file=sys.stderr)
        subprocess.Popen(args)
        break
    else:
        # You don't want this to happen
        print(f"No regex match for {url!r}", file=sys.stderr)
