[
    {
        "caption": "List \"gone\" branches (tracked branch was deleted)",
        "command": "git",
        "args": { "argv": ["ls-gone"] }
    },
    {
        "caption": "Remove \"gone\" branches (tracked branch was deleted)",
        "command": "git",
        "args": { "argv": ["rm-gone"] }
    },
    {
        "caption": "Open Terminal",
        "command": "git",
        "args": { "argv": ["terminal"] }
    },
    {
        "caption": "Start interactive rebase in terminal",
        "command": "git",
        "args": {"argv": ["rebase-terminal", "$select_commit"]}
    },
    {
        "caption": "Change Theme: Default",
        "command": "set_preference",
        "args": { "setting": "theme", "value": "Merge.sublime-theme" },
    },
    {
        "caption": "Change Theme: Merge Dark",
        "command": "set_preference",
        "args": { "setting": "theme", "value": "Merge Dark.sublime-theme" },
    },
    {
        "caption": "Create \"fixup!\" commit",
        "command": "git",
        "args": {"argv": ["commit", "--fixup", "$select_commit", "-m", "$text"]},
    },
    {
        "caption": "Rebase ontoâ€¦ (branch)",
        "command": "git",
        // Using `$select_commit` does not allow filtering for branch ref names,
        // only commit hashes and commit msgs.
        // Tags are also only available in a special selector
        // and since branches are what I need the most,
        // I only have this variation.
        "args": {"argv": ["rebase", "$select_branch", "--onto", "$select_branch"]},
    },
]
